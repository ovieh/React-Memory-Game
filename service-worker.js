"use strict";var precacheConfig=[["/React-Memory-Game/index.html","1ba1bcc37a66f605dad79a737083b043"],["/React-Memory-Game/static/css/main.e9a1bee1.css","21ae501f6924aa4943bdac7e8422f90d"],["/React-Memory-Game/static/js/main.85734d4f.js","efec76868e842970254152dd0cfb1d64"],["/React-Memory-Game/static/media/batman.22e3f9e3.jpg","22e3f9e327eb4abc2c95e1a2c0d6e18a"],["/React-Memory-Game/static/media/cobra_commander.045c414d.jpg","045c414d9873ee817aa684f45736802f"],["/React-Memory-Game/static/media/dale.efd057fb.jpg","efd057fb4d9c783cdd82d8729afd3e9e"],["/React-Memory-Game/static/media/darkwing_duck.aa164ee2.jpg","aa164ee23bd7593808c84e2d9f39a180"],["/React-Memory-Game/static/media/donatello.476df589.jpg","476df5891cd0d6242d638dfb17b27e0b"],["/React-Memory-Game/static/media/fivel.014723d5.jpg","014723d55e6fbc1e3162e9bdfeccc483"],["/React-Memory-Game/static/media/gambit.3952e5f6.jpg","3952e5f641ca0c75a6b6a60e9b9f523e"],["/React-Memory-Game/static/media/inspector-gadget.4a47b09d.png","4a47b09d6dfa304b75de573bca61a845"],["/React-Memory-Game/static/media/leader-1.40de49ad.jpg","40de49adb08543f48a159437065cbf95"],["/React-Memory-Game/static/media/line-in-motion.49e2fa02.svg","49e2fa02da350f644792ccf37f763a33"],["/React-Memory-Game/static/media/liono.559634ef.jpg","559634efce2e7e30936b27ef6266556b"],["/React-Memory-Game/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/React-Memory-Game/static/media/optimumus_prime.65188353.jpg","65188353adf7e3fe89a7d557653b437b"],["/React-Memory-Game/static/media/skeletor.69bc1282.jpg","69bc128213882c9ebdaf9eb93fc60bef"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),a=urlsToCacheKeys.has(t));var r="/React-Memory-Game/index.html";!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(r,self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});